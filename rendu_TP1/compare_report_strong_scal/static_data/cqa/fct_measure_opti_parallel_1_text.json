{
  "_cqa_text_report":
    {
      "_objects":
        {
          "image_col_maj":
            {
              "type": "image",
              "format": "url",
              "data": "../images/cqa/col_maj.svg",
              "size":
                {
                  "x": 500
                }
            },
          "list_path_1_call_7":
            {
              "dynamic": true,
              "initial": "closed",
              "type": "list",
              "lines":
                [
                "/usr/include/stdlib.h:483",
                "/usr/include/stdlib.h:483",
                "/usr/include/stdlib.h:483"
                ],
              "header": ""
            },
          "image_4x32_256":
            {
              "type": "image",
              "format": "url",
              "data": "../images/cqa/4x32_256.svg",
              "size":
                {
                  "x": 500
                }
            },
          "image_1x64_128":
            {
              "type": "image",
              "format": "url",
              "data": "../images/cqa/1x64_128.svg",
              "size":
                {
                  "x": 500
                }
            },
          "image_4x32_512":
            {
              "type": "image",
              "format": "url",
              "data": "../images/cqa/4x32_512.svg",
              "size":
                {
                  "x": 500
                }
            },
          "image_8x32_512":
            {
              "type": "image",
              "format": "url",
              "data": "../images/cqa/8x32_512.svg",
              "size":
                {
                  "x": 500
                }
            },
          "list_path_1_cvt_1":
            {
              "dynamic": true,
              "initial": "closed",
              "type": "list",
              "lines":
                [
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:117",
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:117",
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:122",
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:125",
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:125",
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:122",
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:117"
                ],
              "header": ""
            },
          "image_2x64_512":
            {
              "type": "image",
              "format": "url",
              "data": "../images/cqa/2x64_512.svg",
              "size":
                {
                  "x": 500
                }
            },
          "list_path_1_call_3":
            {
              "dynamic": true,
              "initial": "closed",
              "type": "list",
              "lines":
                [
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:74",
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:75",
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:76"
                ],
              "header": ""
            },
          "image_1x64_256":
            {
              "type": "image",
              "format": "url",
              "data": "../images/cqa/1x64_256.svg",
              "size":
                {
                  "x": 500
                }
            },
          "list_path_1_call_5":
            {
              "dynamic": true,
              "initial": "closed",
              "type": "list",
              "lines":
                [
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:116",
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:121",
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:129",
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:127",
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:131"
                ],
              "header": ""
            },
          "image_vec_align":
            {
              "type": "image",
              "format": "url",
              "data": "../images/cqa/vec_align.svg",
              "size":
                {
                  "x": 500
                }
            },
          "image_1x64_512":
            {
              "type": "image",
              "format": "url",
              "data": "../images/cqa/1x64_512.svg",
              "size":
                {
                  "x": 500
                }
            },
          "image_1x32_128":
            {
              "type": "image",
              "format": "url",
              "data": "../images/cqa/1x32_128.svg",
              "size":
                {
                  "x": 500
                }
            },
          "list_path_1_complex_1":
            {
              "dynamic": true,
              "initial": "closed",
              "type": "list",
              "lines":
                [
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:133",
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:77",
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:114",
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:133",
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:125",
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:133",
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:122",
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:117"
                ],
              "header": ""
            },
          "image_row_maj":
            {
              "type": "image",
              "format": "url",
              "data": "../images/cqa/row_maj.svg",
              "size":
                {
                  "x": 500
                }
            },
          "list_path_1_call_1":
            {
              "dynamic": true,
              "initial": "closed",
              "type": "list",
              "lines":
                [
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:134"
                ],
              "header": ""
            },
          "image_2x64_256":
            {
              "type": "image",
              "format": "url",
              "data": "../images/cqa/2x64_256.svg",
              "size":
                {
                  "x": 500
                }
            },
          "list_path_1_call_4":
            {
              "dynamic": true,
              "initial": "closed",
              "type": "list",
              "lines":
                [
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:73",
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:112"
                ],
              "header": ""
            },
          "image_1x32_512":
            {
              "type": "image",
              "format": "url",
              "data": "../images/cqa/1x32_512.svg",
              "size":
                {
                  "x": 500
                }
            },
          "list_path_1_complex_2":
            {
              "dynamic": true,
              "initial": "closed",
              "type": "list",
              "lines":
                [

                ],
              "header": ""
            },
          "list_path_1_call_6":
            {
              "dynamic": true,
              "initial": "closed",
              "type": "list",
              "lines":
                [
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:107"
                ],
              "header": ""
            },
          "image_4x64_512":
            {
              "type": "image",
              "format": "url",
              "data": "../images/cqa/4x64_512.svg",
              "size":
                {
                  "x": 500
                }
            },
          "list_path_1_call_2":
            {
              "dynamic": true,
              "initial": "closed",
              "type": "list",
              "lines":
                [
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:49"
                ],
              "header": ""
            },
          "list_path_1_cvt_2":
            {
              "dynamic": true,
              "initial": "closed",
              "type": "list",
              "lines":
                [
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:116",
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:121",
                "/home/mac/rendu_AOC/rendu_TP1/driver_opti.c:127"
                ],
              "header": ""
            },
          "image_1x32_256":
            {
              "type": "image",
              "format": "url",
              "data": "../images/cqa/1x32_256.svg",
              "size":
                {
                  "x": 500
                }
            }
        },
      "AVG":
        {
          "hint":
            [
              {
                "details": "Calling (and then returning from) a function prevents many compiler optimizations (like vectorization), breaks control flow (which reduces pipeline performance) and executes extra instructions to save/restore the registers used inside it, which is very expensive (dozens of cycles). Consider to inline small functions.\n - __stack_chk_fail@plt: 1 occurrences<<list_path_1_call_1>>\n - fprintf@plt: 1 occurrences<<list_path_1_call_2>>\n - free@plt: 3 occurrences<<list_path_1_call_3>>\n - fwrite@plt: 2 occurrences<<list_path_1_call_4>>\n - printf@plt: 5 occurrences<<list_path_1_call_5>>\n - qsort@plt: 1 occurrences<<list_path_1_call_6>>\n - strtol@plt: 3 occurrences<<list_path_1_call_7>>\n",
                "title": "CALL instructions",
                "txt": "Detected function call instructions.\n"
              },
              {
                "details": "These instructions generate more than one micro-operation and only one of them can be decoded during a cycle and the extra micro-operations increase pressure on execution units.\n - JMP: 8 occurrences<<list_path_1_complex_1>>\n - STMXCSR: 1 occurrences<<list_path_1_complex_2>>\n",
                "title": "Complex instructions",
                "txt": "Detected COMPLEX INSTRUCTIONS.\n"
              },
              {
                "workaround": "Avoid mixing data with different types. In particular, check if the type of constants is the same as array elements. Use double instead of single precision only when/where needed by numerical stability and avoid mixing precision. In C/C++, FP constants are double precision by default and must be suffixed by 'f' to make them single precision.",
                "details": " - VCVTSI2SS (INT32/64 to FP32, scalar): 7 occurrences<<list_path_1_cvt_1>>\n - VCVTSS2SD (FP32 to FP64, scalar): 3 occurrences<<list_path_1_cvt_2>>\n",
                "title": "Conversion instructions",
                "txt": "Detected expensive conversion instructions."
              },
              {
                "title": "Type of elements and instruction set",
                "txt": "9 SSE or AVX instructions are processing arithmetic or math operations on single precision FP elements in scalar mode (one at a time).\n"
              },
              {
                "title": "Matching between your function (in the source code) and the binary function",
                "txt": "The binary function is composed of 7 FP arithmetical operations:\n - 3: addition or subtraction\n - 1: multiply\n - 3: divide\nThe binary function is loading 156 bytes (39 single precision FP elements).\nThe binary function is storing 72 bytes (18 single precision FP elements)."
              },
              {
                "title": "Arithmetic intensity",
                "txt": "Arithmetic intensity is 0.03 FP operations per loaded or stored byte."
              }
            ],
          "expert":
            [
              {
                "title": "General properties",
                "txt": "nb instructions    : 196\nnb uops            : 313\nloop length        : 902\nused x86 registers : 16\nused mmx registers : 0\nused xmm registers : 16\nused ymm registers : 0\nused zmm registers : 0\nnb stack references: 16\nADD-SUB / MUL ratio: 3.00\n"
              },
              {
                "title": "Front-end",
                "txt": "MACRO FUSION NOT POSSIBLE\nFIT IN UOP CACHE\nmicro-operation queue: 52.17 cycles\nfront end            : 52.17 cycles\n"
              },
              {
                "title": "Back-end",
                "txt": "       | ALU0/BRU0 | ALU1  | ALU2  | ALU3/BRU1 | AGU0  | AGU1  | AGU2  | FP0  | FP1  | FP2  | FP3\n---------------------------------------------------------------------------------------------------\nuops   | 39.50     | 39.50 | 39.50 | 39.50     | 19.50 | 19.50 | 11.00 | 2.00 | 2.00 | 7.00 | 13.00\ncycles | 39.50     | 39.50 | 39.50 | 39.50     | 19.50 | 19.50 | 11.00 | 2.00 | 2.00 | 7.00 | 13.00\n\nExecution ports to units layout:\n - ALU0/BRU0: ALU, BRU\n - ALU1: ALU\n - ALU2: ALU\n - ALU3/BRU1: ALU, BRU\n - AGU0 (256 bits): store address, load\n - AGU1 (256 bits): store address, load\n - AGU2: store address\n - FP0 (256 bits): VPU\n - FP1 (256 bits): VPU\n - FP2 (256 bits): VPU, FP store data\n - FP3 (256 bits): VPU, DIV/SQRT\n\nCycles executing div or sqrt instructions: 10.50-15.00\nCycles loading/storing data              : 12.00\n"
              },
              {
                "title": "Cycles summary",
                "txt": "Front-end : 52.17\nDispatch  : 39.50\nDIV/SQRT  : 10.50-15.00\nOverall L1: 52.17\n"
              },
              {
                "title": "Vectorization ratios",
                "txt": "INT\nall    : 2%\nload   : 0%\nstore  : 0%\nmul    : 0%\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 3%\nFP\nall     : 41%\nload    : 0%\nstore   : 0%\nmul     : 0%\nadd-sub : 0%\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: 0%\nother   : 66%\nINT+FP\nall     : 15%\nload    : 0%\nstore   : 0%\nmul     : 0%\nadd-sub : 0%\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: 0%\nother   : 25%\n"
              },
              {
                "title": "Vector efficiency ratios",
                "txt": "INT\nall    : 21%\nload   : 22%\nstore  : 20%\nmul    : 12%\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 21%\nFP\nall     : 28%\nload    : 12%\nstore   : 12%\nmul     : 12%\nadd-sub : 12%\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: 12%\nother   : 37%\nINT+FP\nall     : 23%\nload    : 19%\nstore   : 19%\nmul     : 12%\nadd-sub : 12%\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: 12%\nother   : 27%\n"
              },
              {
                "title": "Cycles and memory resources usage",
                "txt": "Assuming all data fit into the L1 cache, each call to the function takes 52.17 cycles. At this rate:\n - 4% of peak load performance is reached (2.99 out of 64.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 4% of peak store performance is reached (1.38 out of 32.00 bytes stored per cycle (GB/s @ 1GHz))\n"
              },
              {
                "title": "Front-end bottlenecks",
                "txt": "Performance is limited by instruction throughput (loading/decoding program instructions to execution core) (front-end is a bottleneck).\n\nBy removing all these bottlenecks, you can lower the cost of an iteration from 52.17 to 39.50 cycles (1.32x speedup).\n"
              },
              {
                "title": "ASM code",
                "txt": "In the binary file, the address of the function is: 1100\n\nInstruction                      | Nb FU | ALU0/BRU0 | ALU1 | ALU2 | ALU3/BRU1 | AGU0 | AGU1 | AGU2 | FP0  | FP1  | FP2  | FP3  | Latency | Recip. throughput | Vectorization\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nLEA 0x8(%RSP),%R10               | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nAND $-0x20,%RSP                  | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nPUSHQ -0x8(%R10)                 | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 1       | 1                 | N/A\nPUSH %RBP                        | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 1                 | N/A\nMOV %RSP,%RBP                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nPUSH %R15                        | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 1                 | N/A\nPUSH %R14                        | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 1                 | N/A\nPUSH %R13                        | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 1                 | N/A\nPUSH %R12                        | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 1                 | N/A\nPUSH %R10                        | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 1                 | N/A\nPUSH %RBX                        | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 1                 | N/A\nMOV %RSI,%R12                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nSUB $0x1a0,%RSP                  | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV %FS:0x28,%RAX                | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | N/A\nMOV %RAX,-0x38(%RBP)             | 1     | 0         | 0    | 0    | 0         | 0.33 | 0.33 | 0.33 | 0    | 0    | 0    | 0    | 4       | 1                 | scal (25.0%)\nXOR %EAX,%EAX                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nCMP $0x4,%EDI                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | scal (12.5%)\nJE 117f <main+0x7f>              | 1     | 0.50      | 0    | 0    | 0.50      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nMOV (%RSI),%RDX                  | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | N/A\nMOV 0x3f3c(%RIP),%RDI            | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | scal (25.0%)\nLEA 0x1ec5(%RIP),%RSI            | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nCALL 10a0 <fprintf@plt>          | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nMOV $0x1,%EAX                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV -0x38(%RBP),%RDX             | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | N/A\nSUB %FS:0x28,%RDX                | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nJNE 1c62 <main+0xb62>            | 1     | 0.50      | 0    | 0    | 0.50      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nADD $0x1a0,%RSP                  | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nPOP %RBX                         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nPOP %RDX                         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nPOP %R12                         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nPOP %R13                         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nPOP %R14                         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nPOP %R15                         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nPOP %RBP                         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nLEA -0x8(%RDX),%RSP              | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nRET                              | 1     | 0.50      | 0    | 0    | 0.50      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nMOV 0x8(%RSI),%RDI               | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | scal (25.0%)\nMOV $0xa,%EDX                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nXOR %ESI,%ESI                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nXOR %R15D,%R15D                  | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nCALL 10b0 <strtol@plt>           | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nMOV 0x10(%R12),%RDI              | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | scal (25.0%)\nMOV $0xa,%EDX                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nXOR %ESI,%ESI                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nVMOVD %EAX,%XMM4                 | 1     | 0         | 0    | 1    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 2       | 1                 | scal (12.5%)\nMOV %RAX,%RBX                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nVPSHUFD $-0x20,%XMM4,%XMM2       | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0.50 | 0.50 | 0    | 1       | 0.50              | vect (50.0%)\nVMOVQ %XMM2,-0x168(%RBP)         | 1     | 0         | 0    | 0    | 0         | 0.33 | 0.33 | 0.33 | 0    | 0    | 1    | 0    | 1       | 1                 | scal (25.0%)\nCALL 10b0 <strtol@plt>           | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nMOV $0xa,%EDX                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nXOR %ESI,%ESI                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nMOV 0x18(%R12),%RDI              | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | scal (25.0%)\nMOV %EAX,-0x178(%RBP)            | 1     | 0         | 0    | 0    | 0         | 0.33 | 0.33 | 0.33 | 0    | 0    | 0    | 0    | 4       | 1                 | scal (12.5%)\nCALL 10b0 <strtol@plt>           | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nMOV %EBX,%ECX                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nIMUL %EBX,%ECX                   | 1     | 0         | 1    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 3       | 1                 | N/A\nMOV %RAX,%R13                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | scal (25.0%)\nMOV %EAX,-0x174(%RBP)            | 1     | 0         | 0    | 0    | 0         | 0.33 | 0.33 | 0.33 | 0    | 0    | 0    | 0    | 4       | 1                 | scal (12.5%)\nMOV %EBX,%EAX                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nMOV %R13,-0x1b8(%RBP)            | 1     | 0         | 0    | 0    | 0         | 0.33 | 0.33 | 0.33 | 0    | 0    | 0    | 0    | 4       | 1                 | scal (25.0%)\nMOV %RAX,%RDX                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nIMUL %RAX,%RDX                   | 1     | 0         | 1    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 3       | 1                 | N/A\nMOV %ECX,-0x194(%RBP)            | 1     | 0         | 0    | 0    | 0         | 0.33 | 0.33 | 0.33 | 0    | 0    | 0    | 0    | 4       | 1                 | scal (12.5%)\nDEC %ECX                         | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nSAL $0x3,%RAX                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nLEA 0x8(,%RCX,8),%RDI            | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV %RAX,-0x1a8(%RBP)            | 1     | 0         | 0    | 0    | 0         | 0.33 | 0.33 | 0.33 | 0    | 0    | 0    | 0    | 4       | 1                 | scal (25.0%)\nMOV %RDI,-0x1b0(%RBP)            | 1     | 0         | 0    | 0    | 0         | 0.33 | 0.33 | 0.33 | 0    | 0    | 0    | 0    | 4       | 1                 | scal (25.0%)\nLEA (,%RDX,8),%RSI               | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV %RSI,-0x1a0(%RBP)            | 1     | 0         | 0    | 0    | 0         | 0.33 | 0.33 | 0.33 | 0    | 0    | 0    | 0    | 4       | 1                 | scal (25.0%)\nLEA 0x545(%RIP),%RCX             | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV $0x8,%EDX                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV $0x1f,%ESI                   | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV %R12,%RDI                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | scal (25.0%)\nMOV -0x1b8(%RBP),%R13            | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | scal (25.0%)\nCALL 1040 <qsort@plt>            | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nMOV -0x130(%RBP),%R15            | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | N/A\nCMP $0x7cf,%R15                  | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | scal (25.0%)\nJBE 1ba5 <main+0xaa5>            | 1     | 0.50      | 0    | 0    | 0.50      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nTEST %R15,%R15                   | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | scal (25.0%)\nJS 1c3c <main+0xb3c>             | 1     | 0.50      | 0    | 0    | 0.50      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nVXORPS %XMM6,%XMM6,%XMM6         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | vect (50.0%)\nVCVTSI2SS %R15,%XMM6,%XMM1       | 1     | 0         | 0    | 1    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 1    | 4       | 1                 | scal (25.0%)\nVMOVD %XMM1,%R14D                | 1     | 1         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 2       | 1                 | scal (12.5%)\nMOV -0x194(%RBP),%R8D            | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | scal (12.5%)\nVXORPS %XMM8,%XMM8,%XMM8         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | vect (50.0%)\nVMOVD %R14D,%XMM10               | 1     | 0         | 0    | 1    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 2       | 1                 | scal (12.5%)\nMOV %R15,%RSI                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nLEA 0x184e(%RIP),%RDI            | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV $0x1,%EAX                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nIMUL %R13D,%R8D                  | 1     | 0         | 1    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 3       | 1                 | scal (12.5%)\nSAL $0x4,%R8D                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | scal (12.5%)\nVCVTSI2SS %R8,%XMM8,%XMM9        | 1     | 0         | 0    | 1    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 1    | 4       | 1                 | scal (25.0%)\nVDIVSS %XMM9,%XMM10,%XMM11       | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 1    | 10      | 3.50-5            | scal (12.5%)\nVMOVSS %XMM9,-0x160(%RBP)        | 1     | 0         | 0    | 0    | 0         | 0.33 | 0.33 | 0.33 | 0    | 0    | 1    | 0    | 1       | 1                 | scal (12.5%)\nVCVTSS2SD %XMM11,%XMM11,%XMM0    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 1    | 3       | 1                 | scal (12.5%)\nCALL 1070 <printf@plt>           | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nMOV -0xb8(%RBP),%RBX             | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | N/A\nVMOVSS -0x160(%RBP),%XMM12       | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | scal (12.5%)\nTEST %RBX,%RBX                   | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | scal (25.0%)\nJS 1c19 <main+0xb19>             | 1     | 0.50      | 0    | 0    | 0.50      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nVXORPS %XMM13,%XMM13,%XMM13      | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | vect (50.0%)\nVCVTSI2SS %RBX,%XMM13,%XMM0      | 1     | 0         | 0    | 1    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 1    | 4       | 1                 | scal (25.0%)\nVMOVAPS %XMM0,%XMM15             | 0     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | vect (50.0%)\nVDIVSS %XMM12,%XMM15,%XMM4       | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 1    | 10      | 3.50-5            | scal (12.5%)\nMOV %RBX,%RSI                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nLEA 0x1820(%RIP),%RDI            | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV $0x1,%EAX                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nVCVTSS2SD %XMM4,%XMM4,%XMM0      | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 1    | 3       | 1                 | scal (12.5%)\nCALL 1070 <printf@plt>           | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nSUB %R15,%RBX                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nJS 1be3 <main+0xae3>             | 1     | 0.50      | 0    | 0    | 0.50      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nVXORPS %XMM2,%XMM2,%XMM2         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | vect (50.0%)\nVCVTSI2SS %RBX,%XMM2,%XMM3       | 1     | 0         | 0    | 1    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 1    | 4       | 1                 | scal (25.0%)\nVMULSS 0x16c4(%RIP),%XMM3,%XMM5  | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0.50 | 0.50 | 0    | 0    | 3       | 0.50              | scal (12.5%)\nVMOVD %R14D,%XMM7                | 1     | 0         | 0    | 1    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 2       | 1                 | scal (12.5%)\nVDIVSS %XMM7,%XMM5,%XMM8         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 1    | 10      | 3.50-5            | scal (12.5%)\nVCOMISS 0x16b7(%RIP),%XMM8       | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0.50 | 0.50 | 1    | 0    | 2       | 1                 | scal (12.5%)\nVCVTSS2SD %XMM8,%XMM8,%XMM9      | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 1    | 3       | 1                 | scal (12.5%)\nJAE 1bc7 <main+0xac7>            | 1     | 0.50      | 0    | 0    | 0.50      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nVCOMISS 0x16a8(%RIP),%XMM8       | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0.50 | 0.50 | 1    | 0    | 2       | 1                 | scal (12.5%)\nVMOVAPD %XMM9,%XMM0              | 0     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | vect (50.0%)\nJB 1c01 <main+0xb01>             | 1     | 0.50      | 0    | 0    | 0.50      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nLEA 0x181a(%RIP),%RDI            | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV $0x1,%EAX                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nCALL 1070 <printf@plt>           | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nXOR %EAX,%EAX                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nJMP 1155 <main+0x55>             | 6     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 2                 | N/A\nNOPW %CS:(%RAX,%RAX,1)           | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV 0x3516(%RIP),%RCX            | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | N/A\nMOV $0x12,%EDX                   | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV $0x1,%ESI                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nLEA 0x15e9(%RIP),%RDI            | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nCALL 10d0 <fwrite@plt>           | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nMOV -0x180(%RBP),%RDI            | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | scal (25.0%)\nCALL 1030 <free@plt>             | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nMOV -0x188(%RBP),%RDI            | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | scal (25.0%)\nCALL 1030 <free@plt>             | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nMOV %RBX,%RDI                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | scal (25.0%)\nCALL 1030 <free@plt>             | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nJMP 1150 <main+0x50>             | 6     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 2                 | N/A\nMOV 0x34d4(%RIP),%RCX            | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | N/A\nMOV $0x64,%EDX                   | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV $0x1,%ESI                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nLEA 0x14e3(%RIP),%RDI            | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nCALL 10d0 <fwrite@plt>           | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nJMP 1150 <main+0x50>             | 6     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 2                 | N/A\nVMOVAPD %XMM9,%XMM0              | 0     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | vect (50.0%)\nLEA 0x15a5(%RIP),%RDI            | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV $0x1,%EAX                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nCALL 1070 <printf@plt>           | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nXOR %EAX,%EAX                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nJMP 1155 <main+0x55>             | 6     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 2                 | N/A\nMOV %RBX,%R10                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nAND $0x1,%EBX                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nVXORPS %XMM6,%XMM6,%XMM6         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | vect (50.0%)\nSHR $0x1,%R10                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nOR %RBX,%R10                     | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nVCVTSI2SS %R10,%XMM6,%XMM1       | 1     | 0         | 0    | 1    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 1    | 4       | 1                 | scal (25.0%)\nVADDSS %XMM1,%XMM1,%XMM3         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0.50 | 0.50 | 3       | 0.50              | scal (12.5%)\nJMP 1938 <main+0x838>            | 6     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 2                 | N/A\nLEA 0x15a3(%RIP),%RDI            | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV $0x1,%EAX                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nCALL 1070 <printf@plt>           | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nXOR %EAX,%EAX                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nJMP 1155 <main+0x55>             | 6     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 2                 | N/A\nMOV %RBX,%R9                     | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | scal (25.0%)\nMOV %RBX,%R11                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | scal (25.0%)\nVXORPS %XMM14,%XMM14,%XMM14      | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | vect (50.0%)\nSHR $0x1,%R9                     | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | scal (25.0%)\nAND $0x1,%R11D                   | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | scal (12.5%)\nOR %R11,%R9                      | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | scal (25.0%)\nVCVTSI2SS %R9,%XMM14,%XMM0       | 1     | 0         | 0    | 1    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 1    | 4       | 1                 | scal (25.0%)\nVADDSS %XMM0,%XMM0,%XMM15        | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0.50 | 0.50 | 3       | 0.50              | scal (12.5%)\nJMP 1909 <main+0x809>            | 6     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 2                 | N/A\nMOV %R15,%RCX                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nMOV %R15,%RDI                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | scal (25.0%)\nVXORPS %XMM3,%XMM3,%XMM3         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | vect (50.0%)\nSHR $0x1,%RCX                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nAND $0x1,%EDI                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | scal (12.5%)\nOR %RDI,%RCX                     | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nVCVTSI2SS %RCX,%XMM3,%XMM5       | 1     | 0         | 0    | 1    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 1    | 4       | 1                 | scal (25.0%)\nVADDSS %XMM5,%XMM5,%XMM7         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0.50 | 0.50 | 3       | 0.50              | scal (12.5%)\nVMOVD %XMM7,%R14D                | 1     | 1         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 2       | 1                 | scal (12.5%)\nJMP 189f <main+0x79f>            | 6     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 2                 | N/A\nCALL 1060 <__stack_chk_fail@plt> | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nNOPW (%RAX,%RAX,1)               | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nENDBR64                          |       |           |      |      |           |      |      |      |      |      |      |      |         |                   | N/A\nPUSH %RBP                        | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 1                 | N/A\nMOV %RSP,%RBP                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nSTMXCSR -0x4(%RBP)               | 2     | 0         | 0    | 0    | 0         | 0.33 | 0.33 | 0.33 | 0    | 0    | 0    | 0    | 0       | 14                | N/A\nORL $0x8040,-0x4(%RBP)           | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 1       | 1                 | scal (12.5%)\nLDMXCSR -0x4(%RBP)               | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 16                | N/A\nPOP %RBP                         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nRET                              | 1     | 0.50      | 0    | 0    | 0.50      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nNOPL (%RAX)                      | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\n"
              }
            ],
          "header":
            [
            "Warnings:\n - The number of fused uops of the instruction [ENDBR64] is unknown\n - Detected a function call instruction: ignoring called function instructions.\nRerun with --follow-calls=append to include them to analysis  or with --follow-calls=inline to simulate inlining.\n",
            "0% of peak computational performance is used (0.13 out of 48.00 FLOP per cycle (GFLOPS @ 1GHz))"
            ],
          "brief":
            [

            ],
          "gain":
            [
              {
                "workaround": " - Try to reorganize arrays of structures to structures of arrays\n - Consider to permute loops (see vectorization gain report)\n",
                "title": "Code clean check",
                "txt": "Detected a slowdown caused by scalar integer instructions (typically used for address computation).\nBy removing them, you can lower the cost of an iteration from 52.17 to 15.00 cycles (3.48x speedup)."
              },
              {
                "workaround": " - Try another compiler or update/tune your current one\n - Make array accesses unit-stride:\n  * If your function streams arrays of structures (AoS), try to use structures of arrays instead (SoA):\nfor(i) a[i].x = b[i].x; (slow, non stride 1) => for(i) a.x[i] = b.x[i]; (fast, stride 1)\n",
                "details": "Store and arithmetical SSE/AVX instructions are used in scalar version (process only one data element in vector registers).\nSince your execution units are vector units, only a vectorized function can use their full power.\n",
                "title": "Vectorization",
                "txt": "Your function is probably not vectorized.\nOnly 23% of vector register length is used (average across all SSE/AVX instructions).\nBy vectorizing your function, you can lower the cost of an iteration from 52.17 to 7.45 cycles (7.00x speedup)."
              },
              {
                "title": "Execution units bottlenecks",
                "txt": "Found no such bottlenecks but see expert reports for more complex bottlenecks."
              }
            ],
          "potential":
            [
              {
                "workaround": "Try to change order in which elements are evaluated (using parentheses) in arithmetic expressions containing both ADD/SUB and MUL operations to enable your compiler to generate FMA instructions wherever possible.\nFor instance a + b*c is a valid FMA (MUL then ADD).\nHowever (a+b)* c cannot be translated into an FMA (ADD then MUL).",
                "title": "FMA",
                "txt": "Presence of both ADD/SUB and MUL operations."
              }
            ]
        },
      "paths":
        [
          {
            "hint":
              [
                {
                  "details": "Calling (and then returning from) a function prevents many compiler optimizations (like vectorization), breaks control flow (which reduces pipeline performance) and executes extra instructions to save/restore the registers used inside it, which is very expensive (dozens of cycles). Consider to inline small functions.\n - __stack_chk_fail@plt: 1 occurrences<<list_path_1_call_1>>\n - fprintf@plt: 1 occurrences<<list_path_1_call_2>>\n - free@plt: 3 occurrences<<list_path_1_call_3>>\n - fwrite@plt: 2 occurrences<<list_path_1_call_4>>\n - printf@plt: 5 occurrences<<list_path_1_call_5>>\n - qsort@plt: 1 occurrences<<list_path_1_call_6>>\n - strtol@plt: 3 occurrences<<list_path_1_call_7>>\n",
                  "title": "CALL instructions",
                  "txt": "Detected function call instructions.\n"
                },
                {
                  "details": "These instructions generate more than one micro-operation and only one of them can be decoded during a cycle and the extra micro-operations increase pressure on execution units.\n - JMP: 8 occurrences<<list_path_1_complex_1>>\n - STMXCSR: 1 occurrences<<list_path_1_complex_2>>\n",
                  "title": "Complex instructions",
                  "txt": "Detected COMPLEX INSTRUCTIONS.\n"
                },
                {
                  "workaround": "Avoid mixing data with different types. In particular, check if the type of constants is the same as array elements. Use double instead of single precision only when/where needed by numerical stability and avoid mixing precision. In C/C++, FP constants are double precision by default and must be suffixed by 'f' to make them single precision.",
                  "details": " - VCVTSI2SS (INT32/64 to FP32, scalar): 7 occurrences<<list_path_1_cvt_1>>\n - VCVTSS2SD (FP32 to FP64, scalar): 3 occurrences<<list_path_1_cvt_2>>\n",
                  "title": "Conversion instructions",
                  "txt": "Detected expensive conversion instructions."
                },
                {
                  "title": "Type of elements and instruction set",
                  "txt": "9 SSE or AVX instructions are processing arithmetic or math operations on single precision FP elements in scalar mode (one at a time).\n"
                },
                {
                  "title": "Matching between your function (in the source code) and the binary function",
                  "txt": "The binary function is composed of 7 FP arithmetical operations:\n - 3: addition or subtraction\n - 1: multiply\n - 3: divide\nThe binary function is loading 156 bytes (39 single precision FP elements).\nThe binary function is storing 72 bytes (18 single precision FP elements)."
                },
                {
                  "title": "Arithmetic intensity",
                  "txt": "Arithmetic intensity is 0.03 FP operations per loaded or stored byte."
                }
              ],
            "expert":
              [
                {
                  "title": "General properties",
                  "txt": "nb instructions    : 196\nnb uops            : 313\nloop length        : 902\nused x86 registers : 16\nused mmx registers : 0\nused xmm registers : 16\nused ymm registers : 0\nused zmm registers : 0\nnb stack references: 16\nADD-SUB / MUL ratio: 3.00\n"
                },
                {
                  "title": "Front-end",
                  "txt": "MACRO FUSION NOT POSSIBLE\nFIT IN UOP CACHE\nmicro-operation queue: 52.17 cycles\nfront end            : 52.17 cycles\n"
                },
                {
                  "title": "Back-end",
                  "txt": "       | ALU0/BRU0 | ALU1  | ALU2  | ALU3/BRU1 | AGU0  | AGU1  | AGU2  | FP0  | FP1  | FP2  | FP3\n---------------------------------------------------------------------------------------------------\nuops   | 39.50     | 39.50 | 39.50 | 39.50     | 19.50 | 19.50 | 11.00 | 2.00 | 2.00 | 7.00 | 13.00\ncycles | 39.50     | 39.50 | 39.50 | 39.50     | 19.50 | 19.50 | 11.00 | 2.00 | 2.00 | 7.00 | 13.00\n\nExecution ports to units layout:\n - ALU0/BRU0: ALU, BRU\n - ALU1: ALU\n - ALU2: ALU\n - ALU3/BRU1: ALU, BRU\n - AGU0 (256 bits): store address, load\n - AGU1 (256 bits): store address, load\n - AGU2: store address\n - FP0 (256 bits): VPU\n - FP1 (256 bits): VPU\n - FP2 (256 bits): VPU, FP store data\n - FP3 (256 bits): VPU, DIV/SQRT\n\nCycles executing div or sqrt instructions: 10.50-15.00\nCycles loading/storing data              : 12.00\n"
                },
                {
                  "title": "Cycles summary",
                  "txt": "Front-end : 52.17\nDispatch  : 39.50\nDIV/SQRT  : 10.50-15.00\nOverall L1: 52.17\n"
                },
                {
                  "title": "Vectorization ratios",
                  "txt": "INT\nall    : 2%\nload   : 0%\nstore  : 0%\nmul    : 0%\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 3%\nFP\nall     : 41%\nload    : 0%\nstore   : 0%\nmul     : 0%\nadd-sub : 0%\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: 0%\nother   : 66%\nINT+FP\nall     : 15%\nload    : 0%\nstore   : 0%\nmul     : 0%\nadd-sub : 0%\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: 0%\nother   : 25%\n"
                },
                {
                  "title": "Vector efficiency ratios",
                  "txt": "INT\nall    : 21%\nload   : 22%\nstore  : 20%\nmul    : 12%\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 21%\nFP\nall     : 28%\nload    : 12%\nstore   : 12%\nmul     : 12%\nadd-sub : 12%\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: 12%\nother   : 37%\nINT+FP\nall     : 23%\nload    : 19%\nstore   : 19%\nmul     : 12%\nadd-sub : 12%\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: 12%\nother   : 27%\n"
                },
                {
                  "title": "Cycles and memory resources usage",
                  "txt": "Assuming all data fit into the L1 cache, each call to the function takes 52.17 cycles. At this rate:\n - 4% of peak load performance is reached (2.99 out of 64.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 4% of peak store performance is reached (1.38 out of 32.00 bytes stored per cycle (GB/s @ 1GHz))\n"
                },
                {
                  "title": "Front-end bottlenecks",
                  "txt": "Performance is limited by instruction throughput (loading/decoding program instructions to execution core) (front-end is a bottleneck).\n\nBy removing all these bottlenecks, you can lower the cost of an iteration from 52.17 to 39.50 cycles (1.32x speedup).\n"
                },
                {
                  "title": "ASM code",
                  "txt": "In the binary file, the address of the function is: 1100\n\nInstruction                      | Nb FU | ALU0/BRU0 | ALU1 | ALU2 | ALU3/BRU1 | AGU0 | AGU1 | AGU2 | FP0  | FP1  | FP2  | FP3  | Latency | Recip. throughput | Vectorization\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nLEA 0x8(%RSP),%R10               | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nAND $-0x20,%RSP                  | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nPUSHQ -0x8(%R10)                 | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 1       | 1                 | N/A\nPUSH %RBP                        | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 1                 | N/A\nMOV %RSP,%RBP                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nPUSH %R15                        | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 1                 | N/A\nPUSH %R14                        | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 1                 | N/A\nPUSH %R13                        | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 1                 | N/A\nPUSH %R12                        | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 1                 | N/A\nPUSH %R10                        | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 1                 | N/A\nPUSH %RBX                        | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 1                 | N/A\nMOV %RSI,%R12                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nSUB $0x1a0,%RSP                  | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV %FS:0x28,%RAX                | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | N/A\nMOV %RAX,-0x38(%RBP)             | 1     | 0         | 0    | 0    | 0         | 0.33 | 0.33 | 0.33 | 0    | 0    | 0    | 0    | 4       | 1                 | scal (25.0%)\nXOR %EAX,%EAX                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nCMP $0x4,%EDI                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | scal (12.5%)\nJE 117f <main+0x7f>              | 1     | 0.50      | 0    | 0    | 0.50      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nMOV (%RSI),%RDX                  | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | N/A\nMOV 0x3f3c(%RIP),%RDI            | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | scal (25.0%)\nLEA 0x1ec5(%RIP),%RSI            | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nCALL 10a0 <fprintf@plt>          | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nMOV $0x1,%EAX                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV -0x38(%RBP),%RDX             | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | N/A\nSUB %FS:0x28,%RDX                | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nJNE 1c62 <main+0xb62>            | 1     | 0.50      | 0    | 0    | 0.50      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nADD $0x1a0,%RSP                  | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nPOP %RBX                         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nPOP %RDX                         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nPOP %R12                         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nPOP %R13                         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nPOP %R14                         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nPOP %R15                         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nPOP %RBP                         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nLEA -0x8(%RDX),%RSP              | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nRET                              | 1     | 0.50      | 0    | 0    | 0.50      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nMOV 0x8(%RSI),%RDI               | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | scal (25.0%)\nMOV $0xa,%EDX                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nXOR %ESI,%ESI                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nXOR %R15D,%R15D                  | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nCALL 10b0 <strtol@plt>           | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nMOV 0x10(%R12),%RDI              | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | scal (25.0%)\nMOV $0xa,%EDX                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nXOR %ESI,%ESI                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nVMOVD %EAX,%XMM4                 | 1     | 0         | 0    | 1    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 2       | 1                 | scal (12.5%)\nMOV %RAX,%RBX                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nVPSHUFD $-0x20,%XMM4,%XMM2       | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0.50 | 0.50 | 0    | 1       | 0.50              | vect (50.0%)\nVMOVQ %XMM2,-0x168(%RBP)         | 1     | 0         | 0    | 0    | 0         | 0.33 | 0.33 | 0.33 | 0    | 0    | 1    | 0    | 1       | 1                 | scal (25.0%)\nCALL 10b0 <strtol@plt>           | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nMOV $0xa,%EDX                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nXOR %ESI,%ESI                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nMOV 0x18(%R12),%RDI              | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | scal (25.0%)\nMOV %EAX,-0x178(%RBP)            | 1     | 0         | 0    | 0    | 0         | 0.33 | 0.33 | 0.33 | 0    | 0    | 0    | 0    | 4       | 1                 | scal (12.5%)\nCALL 10b0 <strtol@plt>           | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nMOV %EBX,%ECX                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nIMUL %EBX,%ECX                   | 1     | 0         | 1    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 3       | 1                 | N/A\nMOV %RAX,%R13                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | scal (25.0%)\nMOV %EAX,-0x174(%RBP)            | 1     | 0         | 0    | 0    | 0         | 0.33 | 0.33 | 0.33 | 0    | 0    | 0    | 0    | 4       | 1                 | scal (12.5%)\nMOV %EBX,%EAX                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nMOV %R13,-0x1b8(%RBP)            | 1     | 0         | 0    | 0    | 0         | 0.33 | 0.33 | 0.33 | 0    | 0    | 0    | 0    | 4       | 1                 | scal (25.0%)\nMOV %RAX,%RDX                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nIMUL %RAX,%RDX                   | 1     | 0         | 1    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 3       | 1                 | N/A\nMOV %ECX,-0x194(%RBP)            | 1     | 0         | 0    | 0    | 0         | 0.33 | 0.33 | 0.33 | 0    | 0    | 0    | 0    | 4       | 1                 | scal (12.5%)\nDEC %ECX                         | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nSAL $0x3,%RAX                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nLEA 0x8(,%RCX,8),%RDI            | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV %RAX,-0x1a8(%RBP)            | 1     | 0         | 0    | 0    | 0         | 0.33 | 0.33 | 0.33 | 0    | 0    | 0    | 0    | 4       | 1                 | scal (25.0%)\nMOV %RDI,-0x1b0(%RBP)            | 1     | 0         | 0    | 0    | 0         | 0.33 | 0.33 | 0.33 | 0    | 0    | 0    | 0    | 4       | 1                 | scal (25.0%)\nLEA (,%RDX,8),%RSI               | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV %RSI,-0x1a0(%RBP)            | 1     | 0         | 0    | 0    | 0         | 0.33 | 0.33 | 0.33 | 0    | 0    | 0    | 0    | 4       | 1                 | scal (25.0%)\nLEA 0x545(%RIP),%RCX             | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV $0x8,%EDX                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV $0x1f,%ESI                   | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV %R12,%RDI                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | scal (25.0%)\nMOV -0x1b8(%RBP),%R13            | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | scal (25.0%)\nCALL 1040 <qsort@plt>            | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nMOV -0x130(%RBP),%R15            | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | N/A\nCMP $0x7cf,%R15                  | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | scal (25.0%)\nJBE 1ba5 <main+0xaa5>            | 1     | 0.50      | 0    | 0    | 0.50      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nTEST %R15,%R15                   | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | scal (25.0%)\nJS 1c3c <main+0xb3c>             | 1     | 0.50      | 0    | 0    | 0.50      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nVXORPS %XMM6,%XMM6,%XMM6         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | vect (50.0%)\nVCVTSI2SS %R15,%XMM6,%XMM1       | 1     | 0         | 0    | 1    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 1    | 4       | 1                 | scal (25.0%)\nVMOVD %XMM1,%R14D                | 1     | 1         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 2       | 1                 | scal (12.5%)\nMOV -0x194(%RBP),%R8D            | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | scal (12.5%)\nVXORPS %XMM8,%XMM8,%XMM8         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | vect (50.0%)\nVMOVD %R14D,%XMM10               | 1     | 0         | 0    | 1    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 2       | 1                 | scal (12.5%)\nMOV %R15,%RSI                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nLEA 0x184e(%RIP),%RDI            | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV $0x1,%EAX                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nIMUL %R13D,%R8D                  | 1     | 0         | 1    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 3       | 1                 | scal (12.5%)\nSAL $0x4,%R8D                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | scal (12.5%)\nVCVTSI2SS %R8,%XMM8,%XMM9        | 1     | 0         | 0    | 1    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 1    | 4       | 1                 | scal (25.0%)\nVDIVSS %XMM9,%XMM10,%XMM11       | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 1    | 10      | 3.50-5            | scal (12.5%)\nVMOVSS %XMM9,-0x160(%RBP)        | 1     | 0         | 0    | 0    | 0         | 0.33 | 0.33 | 0.33 | 0    | 0    | 1    | 0    | 1       | 1                 | scal (12.5%)\nVCVTSS2SD %XMM11,%XMM11,%XMM0    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 1    | 3       | 1                 | scal (12.5%)\nCALL 1070 <printf@plt>           | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nMOV -0xb8(%RBP),%RBX             | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | N/A\nVMOVSS -0x160(%RBP),%XMM12       | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | scal (12.5%)\nTEST %RBX,%RBX                   | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | scal (25.0%)\nJS 1c19 <main+0xb19>             | 1     | 0.50      | 0    | 0    | 0.50      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nVXORPS %XMM13,%XMM13,%XMM13      | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | vect (50.0%)\nVCVTSI2SS %RBX,%XMM13,%XMM0      | 1     | 0         | 0    | 1    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 1    | 4       | 1                 | scal (25.0%)\nVMOVAPS %XMM0,%XMM15             | 0     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | vect (50.0%)\nVDIVSS %XMM12,%XMM15,%XMM4       | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 1    | 10      | 3.50-5            | scal (12.5%)\nMOV %RBX,%RSI                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nLEA 0x1820(%RIP),%RDI            | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV $0x1,%EAX                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nVCVTSS2SD %XMM4,%XMM4,%XMM0      | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 1    | 3       | 1                 | scal (12.5%)\nCALL 1070 <printf@plt>           | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nSUB %R15,%RBX                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nJS 1be3 <main+0xae3>             | 1     | 0.50      | 0    | 0    | 0.50      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nVXORPS %XMM2,%XMM2,%XMM2         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | vect (50.0%)\nVCVTSI2SS %RBX,%XMM2,%XMM3       | 1     | 0         | 0    | 1    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 1    | 4       | 1                 | scal (25.0%)\nVMULSS 0x16c4(%RIP),%XMM3,%XMM5  | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0.50 | 0.50 | 0    | 0    | 3       | 0.50              | scal (12.5%)\nVMOVD %R14D,%XMM7                | 1     | 0         | 0    | 1    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 2       | 1                 | scal (12.5%)\nVDIVSS %XMM7,%XMM5,%XMM8         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 1    | 10      | 3.50-5            | scal (12.5%)\nVCOMISS 0x16b7(%RIP),%XMM8       | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0.50 | 0.50 | 1    | 0    | 2       | 1                 | scal (12.5%)\nVCVTSS2SD %XMM8,%XMM8,%XMM9      | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 1    | 3       | 1                 | scal (12.5%)\nJAE 1bc7 <main+0xac7>            | 1     | 0.50      | 0    | 0    | 0.50      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nVCOMISS 0x16a8(%RIP),%XMM8       | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0.50 | 0.50 | 1    | 0    | 2       | 1                 | scal (12.5%)\nVMOVAPD %XMM9,%XMM0              | 0     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | vect (50.0%)\nJB 1c01 <main+0xb01>             | 1     | 0.50      | 0    | 0    | 0.50      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nLEA 0x181a(%RIP),%RDI            | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV $0x1,%EAX                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nCALL 1070 <printf@plt>           | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nXOR %EAX,%EAX                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nJMP 1155 <main+0x55>             | 6     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 2                 | N/A\nNOPW %CS:(%RAX,%RAX,1)           | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV 0x3516(%RIP),%RCX            | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | N/A\nMOV $0x12,%EDX                   | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV $0x1,%ESI                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nLEA 0x15e9(%RIP),%RDI            | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nCALL 10d0 <fwrite@plt>           | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nMOV -0x180(%RBP),%RDI            | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | scal (25.0%)\nCALL 1030 <free@plt>             | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nMOV -0x188(%RBP),%RDI            | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | scal (25.0%)\nCALL 1030 <free@plt>             | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nMOV %RBX,%RDI                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | scal (25.0%)\nCALL 1030 <free@plt>             | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nJMP 1150 <main+0x50>             | 6     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 2                 | N/A\nMOV 0x34d4(%RIP),%RCX            | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 3       | 0.50              | N/A\nMOV $0x64,%EDX                   | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV $0x1,%ESI                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nLEA 0x14e3(%RIP),%RDI            | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nCALL 10d0 <fwrite@plt>           | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nJMP 1150 <main+0x50>             | 6     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 2                 | N/A\nVMOVAPD %XMM9,%XMM0              | 0     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | vect (50.0%)\nLEA 0x15a5(%RIP),%RDI            | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV $0x1,%EAX                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nCALL 1070 <printf@plt>           | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nXOR %EAX,%EAX                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nJMP 1155 <main+0x55>             | 6     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 2                 | N/A\nMOV %RBX,%R10                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nAND $0x1,%EBX                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nVXORPS %XMM6,%XMM6,%XMM6         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | vect (50.0%)\nSHR $0x1,%R10                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nOR %RBX,%R10                     | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nVCVTSI2SS %R10,%XMM6,%XMM1       | 1     | 0         | 0    | 1    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 1    | 4       | 1                 | scal (25.0%)\nVADDSS %XMM1,%XMM1,%XMM3         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0.50 | 0.50 | 3       | 0.50              | scal (12.5%)\nJMP 1938 <main+0x838>            | 6     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 2                 | N/A\nLEA 0x15a3(%RIP),%RDI            | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nMOV $0x1,%EAX                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nCALL 1070 <printf@plt>           | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nXOR %EAX,%EAX                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nJMP 1155 <main+0x55>             | 6     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 2                 | N/A\nMOV %RBX,%R9                     | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | scal (25.0%)\nMOV %RBX,%R11                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | scal (25.0%)\nVXORPS %XMM14,%XMM14,%XMM14      | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | vect (50.0%)\nSHR $0x1,%R9                     | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | scal (25.0%)\nAND $0x1,%R11D                   | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | scal (12.5%)\nOR %R11,%R9                      | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | scal (25.0%)\nVCVTSI2SS %R9,%XMM14,%XMM0       | 1     | 0         | 0    | 1    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 1    | 4       | 1                 | scal (25.0%)\nVADDSS %XMM0,%XMM0,%XMM15        | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0.50 | 0.50 | 3       | 0.50              | scal (12.5%)\nJMP 1909 <main+0x809>            | 6     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 2                 | N/A\nMOV %R15,%RCX                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nMOV %R15,%RDI                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | scal (25.0%)\nVXORPS %XMM3,%XMM3,%XMM3         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | vect (50.0%)\nSHR $0x1,%RCX                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nAND $0x1,%EDI                    | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | scal (12.5%)\nOR %RDI,%RCX                     | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nVCVTSI2SS %RCX,%XMM3,%XMM5       | 1     | 0         | 0    | 1    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 1    | 4       | 1                 | scal (25.0%)\nVADDSS %XMM5,%XMM5,%XMM7         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0.50 | 0.50 | 3       | 0.50              | scal (12.5%)\nVMOVD %XMM7,%R14D                | 1     | 1         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 2       | 1                 | scal (12.5%)\nJMP 189f <main+0x79f>            | 6     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 2                 | N/A\nCALL 1060 <__stack_chk_fail@plt> | 6     | 1.25      | 1.25 | 1.25 | 1.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 1                 | N/A\nNOPW (%RAX,%RAX,1)               | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\nENDBR64                          |       |           |      |      |           |      |      |      |      |      |      |      |         |                   | N/A\nPUSH %RBP                        | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 1                 | N/A\nMOV %RSP,%RBP                    | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 0       | 0.25              | N/A\nSTMXCSR -0x4(%RBP)               | 2     | 0         | 0    | 0    | 0         | 0.33 | 0.33 | 0.33 | 0    | 0    | 0    | 0    | 0       | 14                | N/A\nORL $0x8040,-0x4(%RBP)           | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 1       | 1                 | scal (12.5%)\nLDMXCSR -0x4(%RBP)               | 1     | 0         | 0    | 0    | 0         | 0.50 | 0.50 | 0    | 0    | 0    | 0    | 0    | 0       | 16                | N/A\nPOP %RBP                         | 1     | 0         | 0    | 0    | 0         | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nRET                              | 1     | 0.50      | 0    | 0    | 0.50      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.50              | N/A\nNOPL (%RAX)                      | 1     | 0.25      | 0.25 | 0.25 | 0.25      | 0    | 0    | 0    | 0    | 0    | 0    | 0    | 1       | 0.25              | N/A\n"
                }
              ],
            "header":
              [
              "Warnings:\n - The number of fused uops of the instruction [ENDBR64] is unknown\n - Detected a function call instruction: ignoring called function instructions.\nRerun with --follow-calls=append to include them to analysis  or with --follow-calls=inline to simulate inlining.\n",
              "0% of peak computational performance is used (0.13 out of 48.00 FLOP per cycle (GFLOPS @ 1GHz))"
              ],
            "brief":
              [

              ],
            "gain":
              [
                {
                  "workaround": " - Try to reorganize arrays of structures to structures of arrays\n - Consider to permute loops (see vectorization gain report)\n",
                  "title": "Code clean check",
                  "txt": "Detected a slowdown caused by scalar integer instructions (typically used for address computation).\nBy removing them, you can lower the cost of an iteration from 52.17 to 15.00 cycles (3.48x speedup)."
                },
                {
                  "workaround": " - Try another compiler or update/tune your current one\n - Make array accesses unit-stride:\n  * If your function streams arrays of structures (AoS), try to use structures of arrays instead (SoA):\nfor(i) a[i].x = b[i].x; (slow, non stride 1) => for(i) a.x[i] = b.x[i]; (fast, stride 1)\n",
                  "details": "Store and arithmetical SSE/AVX instructions are used in scalar version (process only one data element in vector registers).\nSince your execution units are vector units, only a vectorized function can use their full power.\n",
                  "title": "Vectorization",
                  "txt": "Your function is probably not vectorized.\nOnly 23% of vector register length is used (average across all SSE/AVX instructions).\nBy vectorizing your function, you can lower the cost of an iteration from 52.17 to 7.45 cycles (7.00x speedup)."
                },
                {
                  "title": "Execution units bottlenecks",
                  "txt": "Found no such bottlenecks but see expert reports for more complex bottlenecks."
                }
              ],
            "potential":
              [
                {
                  "workaround": "Try to change order in which elements are evaluated (using parentheses) in arithmetic expressions containing both ADD/SUB and MUL operations to enable your compiler to generate FMA instructions wherever possible.\nFor instance a + b*c is a valid FMA (MUL then ADD).\nHowever (a+b)* c cannot be translated into an FMA (ADD then MUL).",
                  "title": "FMA",
                  "txt": "Presence of both ADD/SUB and MUL operations."
                }
              ]
          }
        ],
      "common":
        {
          "header":
            [
            "The function is defined in:\n - /usr/include/stdlib.h:483\n - /home/mac/rendu_AOC/rendu_TP1/driver_opti.c:15-19,41-62,68-86,93-134\n\n",
            "Warnings:\nIgnoring paths for analysis"
            ]
        }
    }
}
